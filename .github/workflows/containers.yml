name: Containers
on:
  # This Workflow can be triggered manually
  workflow_dispatch:
  # Build container images on a daily schedule
  schedule:
    - cron: '11 5 * * *'
  pull_request:
    branches:
      - main
  # Let's also build & tag Spack containers on releases.
  release:
    types: [published]

concurrency:
  group: ci-${{github.ref}}-${{github.event.pull_request.number || github.run_number}}
  cancel-in-progress: true

jobs:
  deploy-images:
    runs-on: self-hosted
    permissions:
      packages: write
    strategy:
      # Even if one container fails to build we still want the others
      # to continue their builds.
      fail-fast: false
      # A matrix of Dockerfile paths, associated tags, and which architectures
      # they support.
      matrix:
        dockerfile: [[e4s-ubuntu-18.04, e4s-ubuntu-18.04.dockerfile, 'linux/amd64,linux/ppc64le,linux/arm64'],
                     [e4s-ubuntu-20.04, e4s-ubuntu-20.04.dockerfile, 'linux/amd64,linux/ppc64le,linux/arm64'],
                     [linux-ubuntu22.04-x86_64_v2, linux-ubuntu22.04-x86_64_v2/Dockerfile, 'linux/amd64'],
                     [e4s-amazonlinux-2, e4s-amazonlinux-2.dockerfile, 'linux/amd64,linux/arm64'],
                     [e4s-centos-7, e4s-centos-7.dockerfile, 'linux/amd64'],
                     [e4s-fedora-36, e4s-fedora-36.dockerfile, 'linux/amd64,linux/ppc64le,linux/arm64']]
    name: Build ${{ matrix.dockerfile[0] }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set Container Tag
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/spack/${{ matrix.dockerfile[0] }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & Deploy ${{ matrix.dockerfile[1] }}
        uses: docker/build-push-action@v3
        with:
          file: Dockerfiles/${{matrix.dockerfile[1]}}
          platforms: ${{ matrix.dockerfile[2] }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.output.tags}}
          labels: ${{ steps.meta.output.labels}}
          #cache-from: type=local,src=/tmp/gitlab-runners/.buildx-cache/${{ matrix.dockerfile[1] }}
          #cache-to: type=local,dest=/tmp/gitlab-runners/.buildx-cache/${{ matrix.dockerfile[1] }},mode=max
